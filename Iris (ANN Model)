# Uploading file and importing libraries

from google.colab import files

files.upload()

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow import keras

# Preprocessing the data

data = pd.read_csv('/content/Iris.csv')

# data.head()
# data.tail()

# Deleting non-important feature

del data['Id']

# dividing data into dependent & independent variable

X = data.iloc[:, 0: 4].values
y = data.iloc[:, 4].values

# Encoding label

from sklearn.preprocessing import LabelEncoder

lb = LabelEncoder()
y = lb.fit_transform(y)
y = pd.get_dummies(y).values

# Dividing data into train & test data

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(X, y, random_state=0, test_size=0.2)

# Building ANN Model

model = keras.models.Sequential([
                                 keras.layers.Dense(10, activation='relu', kernel_initializer='uniform', input_shape=(4,)),
                                 keras.layers.Dense(10, activation='relu', kernel_initializer='uniform'),
                                 keras.layers.Dense(3, activation='softmax', kernel_initializer='uniform')
])

model.summary()

# Compiling and Training the model

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

history = model.fit(x_train, y_train, batch_size=32, epochs=100)

# Evaluating the accuracy

loss_val, acc_val = model.evaluate(x_test, y_test)

**0 == 1st class, 1 == 2nd class, 2 == 3r class**

# Making predictions
NOTE:- (0 == Iris-setosa, 1 == Iris-versicolor, 2 == Iris-virginica)

pred = model.predict([[5.7, 2.8, 4.1, 1.3]])
a = np.argmax(pred)
# print(a)

if a == 0:
  print('Iris-setosa')
elif a == 1:
  print('Iris-versicolor')
elif a == 2:
  print('Iris-virginica')
else:
  print('No information available')
